plugins {
    id 'c'
    id 'groovy'
}

group 'org.arl.jhwbus'
version '1.1.1'

defaultTasks 'jar'

assert gradle.gradleVersion == '7.2'

tasks.withType(JavaCompile) {
    options.compilerArgs += ['-Xlint:unchecked']
}

final File javaHome = new File(System.getProperty('java.home'))
final String JNI_INCLUDE_DIR = new File(javaHome, 'include').isDirectory()
        ? new File(javaHome, 'include').getPath() // JDK
        : new File(javaHome, '../include').getPath() // for JRE inside JDK

def isMacOs = System.properties['os.name'].equals('Mac OS X')
tasks.register('compileC', Exec) {
    executable 'gcc'
    args "-std=c99", "-O2", "-Wall", "-Wextra", "-Werror",
        "-Wno-unused-parameter", "-D_XOPEN_SOURCE=600", "-fPIC",
        '-I', '/usr/local/include',
        '-I', JNI_INCLUDE_DIR
    if (isMacOs) {
        args '-I', JNI_INCLUDE_DIR + '/darwin',
            '-dynamiclib'
    }
    else {
        args '-I', JNI_INCLUDE_DIR + '/linux'
        args '-shared'
    }
    inputs.files fileTree('src/main/c') { include '**/*.c' }
    if (isMacOs) outputs.file project.layout.buildDirectory.file('libjhwbus.dylib')
    else outputs.file project.layout.buildDirectory.file('libjhwbus.so')
    args '-o', outputs.files.singleFile
    args inputs.files
}
tasks.register('createJhwbusResourceDir', Sync) {
    from tasks.named('compileC')
    into project.layout.buildDirectory.dir('jhwbus')
}
sourceSets.main.resources.srcDirs tasks.named('createJhwbusResourceDir')

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.spockframework:spock-core:2.0-groovy-3.0'
    testImplementation 'org.codehaus.groovy:groovy-all:3.0.8'
}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
    testLogging.exceptionFormat = 'full'
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}